{"version":3,"file":"bundle.js","mappings":"mBAAe,MAAMA,EACjBC,YAAYC,EAAUC,GAClBC,KAAKC,UAAYH,EACjBE,KAAKE,SAAWH,EAGhBD,eACA,OAAOE,KAAKC,UAGZF,cACA,OAAOC,KAAKE,UCTpB,MAAMC,EAAcC,SAASC,cAAc,QACrCC,EAAuBF,SAASG,eAAe,YAC/CC,EAAsBJ,SAASG,eAAe,WAEpDJ,EAAYM,iBAAiB,UAAUC,eAAgBC,GACnDA,EAAEC,iBACF,UACyBC,MAAM,YAC3B,CACIC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UACP,IAAItB,EACAU,EAAqBa,MACrBX,EAAoBW,UAIhCX,EAAoBW,MAAQ,GAC9B,MAAOC,GACLC,QAAQD,MAAMA,OAKtBV,eAAeY,IACX,IAAIC,QAAiBV,MAAM,aACvBW,QAAqBD,EAASE,OAC9BC,EAAc,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaI,OAAQD,IAAK,CAC1C,IAAIE,EAAc,IAAIjC,EAAY4B,EAAaG,GAAG1B,UAAWuB,EAAaG,GAAGzB,UAC7EwB,GAAe,GAAGG,EAAY/B,aAAa+B,EAAY9B,YAE3DK,SAASC,cAAc,YAAYc,MAAQO,EAG3CI,WAAWR,EAAa,KAI5BA,I","sources":["webpack://case2-weatherapp-client/../shared/chat-message.js","webpack://case2-weatherapp-client/./src/index.js"],"sourcesContent":["export default class ChatMessage {\r\n    constructor(nickname, message) {\r\n        this._nickname = nickname;\r\n        this._message = message;\r\n    }\r\n\r\n    get nickname() {\r\n        return this._nickname; \r\n    }\r\n\r\n    get message() {\r\n        return this._message;\r\n    }\r\n}\r\n\r\n// module.exports = ChatMessage;","import ChatMessage  from \"../../shared/chat-message\";\r\n\r\nconst formElement = document.querySelector(\"form\");\r\nconst nicknameInputElement = document.getElementById(\"nickname\");\r\nconst messageInputElement = document.getElementById(\"message\");\r\n\r\nformElement.addEventListener(\"submit\", async function (e) {\r\n    e.preventDefault();\r\n    try {\r\n        let response = await fetch(\"/api/chat\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                new ChatMessage(\r\n                    nicknameInputElement.value,\r\n                    messageInputElement.value\r\n                )\r\n            )\r\n        });\r\n        messageInputElement.value = \"\";\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n});\r\n\r\n// Berichten (om de seconde) ophalen\r\nasync function getMessages() {\r\n    let response = await fetch(\"/api/chat\");\r\n    let chatMessages = await response.json();\r\n    let chatHistory = \"\";\r\n    for (let i = 0; i < chatMessages.length; i++) {\r\n        let chatMessage = new ChatMessage(chatMessages[i]._nickname, chatMessages[i]._message);\r\n        chatHistory += `${chatMessage.nickname}: ${chatMessage.message}\\n`; // \\n = new line\r\n    }\r\n    document.querySelector(\"textarea\").value = chatHistory;\r\n\r\n    // Binnen 1 seconde zichzelf weer aanroepen. Alternatief: setInterval().\r\n    setTimeout(getMessages, 1000);\r\n}\r\n\r\n// Een eerste maal de messages ophalen.\r\ngetMessages();"],"names":["ChatMessage","constructor","nickname","message","this","_nickname","_message","formElement","document","querySelector","nicknameInputElement","getElementById","messageInputElement","addEventListener","async","e","preventDefault","fetch","method","headers","body","JSON","stringify","value","error","console","getMessages","response","chatMessages","json","chatHistory","i","length","chatMessage","setTimeout"],"sourceRoot":""}